{"version":3,"sources":["images/lupa.png","images/cart.png","Components/ElementsHome.jsx","Components/Categories.jsx","Components/ProductCard.jsx","Components/ProductsList.jsx","service/api.js","service/globalFunctions.js","Pages/Home.jsx","Pages/ProductDetails.jsx","Pages/Cart.jsx","Pages/Checkout.jsx","images/pandaHeader.png","App.js","index.js"],"names":["ElementsHome","state","this","props","handleChange","handleClickInput","cart","className","placeholder","type","onChange","onClick","src","lupa","alt","to","pathname","imgCart","length","Component","Categories","oneWordCategories","name","split","categories","handleClickCategory","map","id","value","ProductCard","product","title","thumbnail","price","toLocaleString","minimumFractionDigits","ProductsList","products","handleAddCart","getCategories","a","fetch","data","json","result","getProductBySearchBar","categoryId","query","addCartRefact","findProduct","find","item","availableQuantity","available_quantity","count","totalValue","productCart","key","indexOf","Math","round","Home","restoreFromLocalStorage","localStorageCart","localStorage","getItem","JSON","parse","setState","api","listCategories","getProducts","displayProduct","target","searchByCategories","results","fetchOn","handleChangeInput","addCart","func","setItem","stringify","ProductDetails","location","attributes","attribute","value_name","Cart","shoppingCart","totalSumProducts","updateSum","valueSum","reduce","acc","totalSum","increaseQuantity","decreaseQuantity","removeItem","updatedCart","filter","clearProducts","disabled","Checkout","buyCompleted","App","pandaHeader","width","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01c756fa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/lupa.d7a62503.png\";","export default __webpack_public_path__ + \"static/media/cart.80f1b71e.png\";","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport lupa from '../images/lupa.png';\nimport imgCart from '../images/cart.png';\n\nexport default class ElementsHome extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  render() {\n    const {\n      handleChange,\n      handleClickInput,\n      cart,\n    } = this.props;\n\n    return (\n      <div className=\"elementsHome\">\n        <div className=\"inputButtons\">\n          <input\n            className=\"inputSearch\"\n            placeholder=\"Insira um produto\"\n            type=\"text\"\n            onChange={handleChange}\n          />\n          <button\n            className=\"buttonSearch\"\n            type=\"button\"\n            onClick={handleClickInput}\n          >\n            <img src={lupa} alt=\"pesquisar\" className=\"imgSearch\" />\n          </button>\n          <div className=\"qtdAndCart\">\n            <button\n              className=\"cartSearch\"\n              type=\"button\"\n            >\n              <Link\n                to={{\n                  pathname: '/cart',\n                  state: { cart },\n                }}\n              >\n                <img src={imgCart} alt=\"carrinho de compras\" className=\"imgCart\" />\n              </Link>\n            </button>\n            <p className={(cart.length === 0) ? 'qtdCart' : ''}>{cart.length}</p>\n          </div>\n        </div>\n        <h4>Digite algum termo de pesquisa ou escolha uma categoria.</h4>\n      </div>\n    );\n  }\n}\n\nElementsHome.propTypes = {\n  cart: PropTypes.arrayOf(PropTypes.object).isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleClickInput: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Categories extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  oneWordCategories = (name) => {\n    const singleName = name.split(' ')[0];\n    const noComma = singleName.split(',')[0];\n    return noComma;\n  }\n\n  render() {\n    const { categories, handleClickCategory } = this.props;\n    return (\n      <div className=\"categoriesBar\">\n        <div className=\"categories\">\n          {categories.map(({ name, id }) => (\n            <button\n              key={id}\n              type=\"button\"\n              value={id}\n              onClick={handleClickCategory}\n            >\n              {this.oneWordCategories(name)}\n            </button>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nCategories.propTypes = {\n  categories: PropTypes.arrayOf(PropTypes.object).isRequired,\n  handleClickCategory: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class ProductCard extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  render() {\n    const { product } = this.props;\n    const { title, thumbnail, price } = product;\n    return (\n      <div className=\"item\">\n        <h4 className=\"title\">{title}</h4>\n        <img src={thumbnail} alt={title} />\n        <h4 className=\"price\">{`R$ ${price.toLocaleString('pt-br', { minimumFractionDigits: 2 })}` }</h4>\n      </div>\n    );\n  }\n}\n\nProductCard.propTypes = {\n  product: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    thumbnail: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n  }).isRequired,\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport ProductCard from './ProductCard';\n\nexport default class ProductsList extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  render() {\n    const { products, handleAddCart } = this.props;\n    return (\n      <div className=\"items\">\n        {products.map((product) => (\n          <div key={product.id}>\n            <ProductCard product={product} />\n            <button\n              type=\"button\"\n              className=\"buttonDetails\"\n            >\n              <Link to={{\n                pathname: `/details/${product.id}`,\n                state: { product },\n              }}\n              >\n                Mais Detalhes\n              </Link>\n            </button>\n            <button\n              type=\"button\"\n              className=\"buttonCart\"\n              onClick={() => handleAddCart(product)}\n            >\n              Adicionar\n            </button>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\nProductsList.propTypes = {\n  products: PropTypes.arrayOf(PropTypes.object).isRequired,\n  handleAddCart: PropTypes.func.isRequired,\n};\n","export async function getCategories() {\n  const data = await fetch('https://api.mercadolibre.com/sites/MLB/categories');\n  const result = await data.json();\n  return result;\n}\n\nexport async function getProductBySearchBar(categoryId, query) {\n  const data = await fetch(`https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}&q=${query}`);\n  const result = await data.json();\n  return result;\n}\n","// ---------------------------------------------------------------------------------------------\n// Funções para Adicionar produtos ao carrinho de compras, existe duas versões:\n// 1 - Versão addCartFull : maior e mais didática\n// 2 - Versão addCartRefact : mais enxuta e organizada\n\nexport function addCartFull(product, cart) {\n  const {\n    id, title, thumbnail, price,\n  } = product;\n  if (!cart.length) {\n    const availableQuantity = product.available_quantity;\n    const productCart = [{\n      id, title, thumbnail, price, count: 1, totalValue: price, availableQuantity,\n    }];\n    return productCart;\n  }\n  let productCart = cart;\n  const findProduct = productCart.find((item) => item.id === product.id);\n  if (findProduct) {\n    const key = productCart.indexOf(findProduct);\n    productCart[key].count += 1;\n    productCart[key].totalValue = Math.round((productCart[key].count\n      * productCart[key].price) * 100) / 100;\n    return productCart;\n  }\n  const availableQuantity = product.available_quantity;\n  productCart = [...productCart, {\n    id, title, thumbnail, price, count: 1, totalValue: price, availableQuantity,\n  }];\n  return productCart;\n}\n\nexport function addCartRefact(product, cart) {\n  const {\n    id, title, thumbnail, price,\n  } = product;\n  const findProduct = cart.find((item) => item.id === product.id);\n  if (!cart.length || !findProduct) {\n    const availableQuantity = product.available_quantity;\n    const productCart = [...cart, {\n      id, title, thumbnail, price, availableQuantity, count: 1, totalValue: price,\n    }];\n    return productCart;\n  }\n  const productCart = cart;\n  const key = productCart.indexOf(findProduct);\n  productCart[key].count += 1;\n  productCart[key].totalValue = Math.round((productCart[key].count\n    * productCart[key].price) * 100) / 100;\n  return productCart;\n}\n// ---------------------------------------------------------------------------------------------\n","import React, { Component } from 'react';\nimport ElementsHome from '../Components/ElementsHome';\nimport Categories from '../Components/Categories';\nimport ProductsList from '../Components/ProductsList';\nimport * as api from '../service/api';\nimport * as func from '../service/globalFunctions';\n\nexport default class Home extends Component {\n  constructor() {\n    super();\n    this.state = {\n      cart: [],\n      listCategories: [],\n      products: [],\n      query: '',\n      fetchOn: false,\n    };\n  }\n\n  componentDidMount() {\n    this.categories();\n    this.restoreFromLocalStorage();\n  }\n\n  restoreFromLocalStorage = () => {\n    let localStorageCart = localStorage.getItem('LScart');\n    if (localStorageCart) {\n      localStorageCart = JSON.parse(localStorageCart);\n      this.setState({\n        cart: localStorageCart,\n      });\n    }\n  }\n\n  categories = async () => {\n    const data = await api.getCategories();\n    this.setState({\n      listCategories: data,\n    });\n  }\n\n  getProducts = async ({ categoryId, query }) => {\n    const displayProduct = await api.getProductBySearchBar(categoryId, query);\n    return displayProduct;\n  }\n\n  handleClickCategory = async ({ target: { value } }) => {\n    const { query } = this.state;\n    const categoryId = value;\n    const searchByCategories = await this.getProducts({ categoryId, query });\n    this.setState({\n      products: searchByCategories.results,\n      fetchOn: true,\n    });\n  }\n\n  handleChangeInput = ({ target: { value } }) => {\n    this.setState({\n      query: value,\n    });\n  }\n\n  handleClickInput = async () => {\n    const { query } = this.state;\n    const categoryId = '';\n    const searchByCategories = await this.getProducts({ categoryId, query });\n    this.setState({\n      products: searchByCategories.results,\n      fetchOn: true,\n    });\n  }\n\n  addCart = (product) => {\n    const { cart } = this.state;\n    const productCart = func.addCartRefact(product, cart);\n    this.setState({\n      cart: productCart,\n    });\n    localStorage.setItem('LScart', JSON.stringify(productCart));\n  }\n\n  render() {\n    const {\n      listCategories,\n      products,\n      cart,\n      fetchOn,\n    } = this.state;\n\n    if (fetchOn) {\n      return (\n        <div>\n          <ElementsHome\n            products={products}\n            categories={listCategories}\n            cart={cart}\n            handleChange={this.handleChangeInput}\n            handleClickInput={this.handleClickInput}\n            handleClickCategory={this.handleClickCategory}\n            handleAddCart={this.addCart}\n          />\n          <div className=\"Cards\">\n            <Categories\n              categories={listCategories}\n              handleClickCategory={this.handleClickCategory}\n            />\n            <ProductsList\n              products={products}\n              handleAddCart={this.addCart}\n            />\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"pandaBG\">\n        <ElementsHome\n          products={products}\n          categories={listCategories}\n          cart={cart}\n          handleChange={this.handleChangeInput}\n          handleClickInput={this.handleClickInput}\n          handleClickCategory={this.handleClickCategory}\n          handleAddCart={this.addCart}\n        />\n        <Categories\n          categories={listCategories}\n          handleClickCategory={this.handleClickCategory}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport * as func from '../service/globalFunctions';\nimport imgCart from '../images/cart.png';\n\nexport default class ProductDetails extends Component {\n  constructor() {\n    super();\n    this.state = {\n      cart: [],\n    };\n  }\n\n  addCart = (product) => {\n    const { cart } = this.state;\n    const productCart = func.addCartRefact(product, cart);\n    this.setState({\n      cart: productCart,\n    });\n    localStorage.setItem('LScart', JSON.stringify(productCart));\n  }\n\n  render() {\n    const { location: { state: { product } } } = this.props;\n    const {\n      title, thumbnail, price, attributes,\n    } = product;\n    const { cart } = this.state;\n    return (\n      <div className=\"ProductDetails\">\n        <div className=\"details\">\n          <h4>DETALHES DO PRODUTO</h4>\n          <br />\n          <p className=\"title\">{title}</p>\n          <img src={thumbnail} alt={title} />\n          <p className=\"price\">{`R$ ${price.toLocaleString('pt-br', { minimumFractionDigits: 2 })}` }</p>\n          <br />\n        </div>\n        <div className=\"moreInformations\">\n          <h4>MAIS INFORMAÇÕES:</h4>\n          <br />\n          {attributes.map((attribute) => (\n            <div key={attribute.name}>\n              <p className=\"uppercase\">{`${attribute.name}: ${attribute.value_name}` }</p>\n            </div>\n          ))}\n        </div>\n        <div className=\"areaButtonsDetails\">\n          <button\n            type=\"button\"\n            className=\"buttonCart\"\n            onClick={() => this.addCart(product)}\n          >\n            Adicionar\n          </button>\n          <button\n            type=\"button\"\n            className=\"buttonHome\"\n          >\n            <Link to=\"/\">\n              Home\n            </Link>\n          </button>\n          <div className=\"qtdAndCart\">\n            <button\n              className=\"cartSearch\"\n              type=\"button\"\n            >\n              <Link\n                to={{\n                  pathname: '/cart',\n                  state: { cart },\n                }}\n              >\n                <img src={imgCart} alt=\"carrinho de compras\" className=\"imgCart\" />\n              </Link>\n            </button>\n            <p className={(cart.length === 0) ? 'qtdCart' : ''}>{cart.length}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nProductDetails.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      product: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        thumbnail: PropTypes.string.isRequired,\n        price: PropTypes.number.isRequired,\n        attributes: PropTypes.arrayOf(PropTypes.object).isRequired,\n      }),\n    }),\n  }).isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nexport default class Cart extends Component {\n  constructor(props) {\n    super(props);\n    const { location: { state: { cart } } } = this.props;\n    this.state = {\n      shoppingCart: cart,\n      updateSum: true,\n      totalSum: 0,\n    };\n  }\n\n  componentDidMount() {\n    this.totalSumProducts();\n    this.restoreFromLocalStorage();\n  }\n\n  componentDidUpdate() {\n    this.totalSumProducts();\n  }\n\n  restoreFromLocalStorage = () => {\n    let localStorageCart = localStorage.getItem('LScart');\n    if (localStorageCart) {\n      localStorageCart = JSON.parse(localStorageCart);\n      this.setState({\n        shoppingCart: localStorageCart,\n      });\n    }\n  }\n\n  totalSumProducts = () => {\n    const { shoppingCart, updateSum } = this.state;\n    if (updateSum) {\n      const valueSum = shoppingCart.reduce((acc, value) => acc + value.totalValue, 0);\n      this.setState({\n        totalSum: valueSum,\n        updateSum: false,\n      });\n    }\n  }\n\n  increaseQuantity = (id) => {\n    const { shoppingCart } = this.state;\n    const productCart = shoppingCart;\n    const findProduct = productCart.find((item) => item.id === id);\n    const key = productCart.indexOf(findProduct);\n    productCart[key].count += 1;\n    productCart[key].totalValue = Math.round((productCart[key].count\n      * productCart[key].price) * 100) / 100;\n    this.setState({\n      shoppingCart: productCart,\n      updateSum: true,\n    });\n    localStorage.setItem('LScart', JSON.stringify(productCart));\n  }\n\n  decreaseQuantity = (id) => {\n    const { shoppingCart } = this.state;\n    const productCart = shoppingCart;\n    const findProduct = productCart.find((item) => item.id === id);\n    const key = productCart.indexOf(findProduct);\n    if (productCart[key].count > 1) {\n      productCart[key].count -= 1;\n      productCart[key].totalValue = Math.round((productCart[key].count\n        * productCart[key].price) * 100) / 100;\n      this.setState({\n        shoppingCart: productCart,\n        updateSum: true,\n      });\n      localStorage.setItem('LScart', JSON.stringify(productCart));\n    }\n  }\n\n  removeItem = (id) => {\n    const { shoppingCart } = this.state;\n    const productCart = shoppingCart;\n    const updatedCart = productCart.filter((item) => item.id !== id);\n    this.setState({\n      shoppingCart: updatedCart,\n      updateSum: true,\n    });\n    localStorage.setItem('LScart', JSON.stringify(updatedCart));\n  }\n\n  clearProducts = () => {\n    const updatedCart = [];\n    this.setState({\n      shoppingCart: updatedCart,\n      updateSum: true,\n    });\n    localStorage.setItem('LScart', JSON.stringify(updatedCart));\n  }\n\n  render() {\n    const { shoppingCart, totalSum } = this.state;\n    const haveCart = shoppingCart.length;\n    if (!haveCart) {\n      return (\n        <div className=\"cartEmpty\">\n          <div>\n            <h3>Carrinho de Compras</h3>\n            <h5>Seu carrinho está vazio.</h5>\n          </div>\n          <div className=\"areaButtons\">\n            <button\n              type=\"button\"\n              className=\"buttonHome\"\n            >\n              <Link to=\"/\">\n                Home\n              </Link>\n            </button>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"cartFull\">\n        <div className=\"itemsCart\">\n          {shoppingCart.map(({\n            id, title, price, thumbnail, availableQuantity, count, totalValue,\n          }) => (\n            <div key={id}>\n              <div className=\"itemCart\">\n                <h4 className=\"title\">{title}</h4>\n                <img src={thumbnail} alt={title} />\n                <h4>\n                  {`Qtide: ${count\n                    .toLocaleString('pt-br', { minimumFractionDigits: 1 })}`}\n                </h4>\n                <h4 className=\"price\">\n                  {`Preço: R$ ${price\n                    .toLocaleString('pt-br', { minimumFractionDigits: 2 })}`}\n                </h4>\n                <h3 className=\"totalValue\">\n                  Total R$:\n                  {\n                    totalValue\n                      .toLocaleString('pt-br', { minimumFractionDigits: 2 })\n                  }\n                </h3>\n\n                <div className=\"itemButtons\">\n                  <button\n                    className=\"increase\"\n                    type=\"button\"\n                    disabled={count >= availableQuantity}\n                    onClick={() => this.increaseQuantity(id)}\n                  >\n                    +\n                  </button>\n                  <button\n                    className=\"decrease\"\n                    type=\"button\"\n                    onClick={() => this.decreaseQuantity(id)}\n                  >\n                    -\n                  </button>\n                  <button\n                    className=\"remove\"\n                    type=\"button\"\n                    onClick={() => this.removeItem(id)}\n                  >\n                    X\n                  </button>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n        <div className=\"areaButtons\">\n          <button\n            type=\"button\"\n            className=\"buttonCheckout\"\n          >\n            <Link\n              to={{ pathname: '/checkout', state: { shoppingCart, totalSum } }}\n            >\n              Finalizar Compra\n            </Link>\n          </button>\n          <button\n            type=\"button\"\n            className=\"buttonClear\"\n            onClick={this.clearProducts}\n          >\n            Limpar Produtos\n          </button>\n          <button\n            type=\"button\"\n            className=\"buttonHome\"\n          >\n            <Link to=\"/\">\n              Home\n            </Link>\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nCart.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      cart: PropTypes.arrayOf(PropTypes.object).isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport default class Checkout extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { };\n  }\n\n  buyCompleted = () => {\n    const updatedCart = [];\n    localStorage.setItem('LScart', JSON.stringify(updatedCart));\n  }\n\n  render() {\n    const { location: { state } } = this.props;\n    const { shoppingCart, totalSum } = state;\n    const haveCart = shoppingCart.length;\n\n    if (!haveCart) {\n      return (\n        <div className=\"cartEmpty\">\n          <div>\n            <h2>Resumo da Compra</h2>\n            <h5>Seu carrinho está vazio.</h5>\n          </div>\n          <div className=\"areaButtons\">\n            <button\n              type=\"button\"\n              className=\"buttonHome\"\n            >\n              <Link to=\"/\">\n                Home\n              </Link>\n            </button>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"checkoutFull\">\n        <div className=\"itemsCart\">\n          {shoppingCart.map(\n            (\n              {\n                id, thumbnail, title, totalValue, count,\n              },\n            ) => (\n              <div key={id}>\n                <div className=\"itemCheckout\">\n                  <img src={thumbnail} alt={title} />\n                  <h4 className=\"title\">{title}</h4>\n                  <h4>{ `Qtide: ${count}` }</h4>\n                  <h3 className=\"price\">\n                    { `Valor R$:\n                    ${totalValue.toLocaleString('pt-br', { minimumFractionDigits: 2 })}`}\n                  </h3>\n                </div>\n              </div>\n            ),\n          ) }\n        </div>\n        <h4 className=\"totalValue\">\n          {\n            `VALOR TOTAL DO PRODUTOS:\n            R$ ${totalSum.toLocaleString('pt-br', { minimumFractionDigits: 2 })}`\n          }\n        </h4>\n        <br />\n        <div className=\"areaButtons\">\n          <button\n            type=\"button\"\n            className=\"buttonCheckout\"\n          >\n            <Link\n              to=\"/\"\n              onClick={this.buyCompleted}\n            >\n              Comprar\n            </Link>\n          </button>\n          <button\n            type=\"button\"\n            className=\"buttonCancel\"\n          >\n            <Link\n              to=\"/\"\n              onClick={this.buyCompleted}\n            >\n              Cancelar Compra\n            </Link>\n          </button>\n          <button\n            type=\"button\"\n            className=\"buttonHome\"\n          >\n            <Link to=\"/\">\n              Home\n            </Link>\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nCheckout.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      shoppingCart: PropTypes.arrayOf(PropTypes.object).isRequired,\n      totalSum: PropTypes.number.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n","export default __webpack_public_path__ + \"static/media/pandaHeader.0d3a3eaf.png\";","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Home from './Pages/Home';\nimport ProductDetails from './Pages/ProductDetails';\nimport Cart from './Pages/Cart';\nimport Checkout from './Pages/Checkout';\n\nimport pandaHeader from './images/pandaHeader.png';\n\nfunction App() {\n  return (\n    <div>\n      <header className=\"header\">\n        <img src={pandaHeader} alt=\"urso panda\" width=\"65px\" />\n        <h1>PANDA STORE</h1>\n      </header>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/details/:id\" component={ProductDetails} />\n          <Route path=\"/cart\" component={Cart} />\n          <Route path=\"/checkout\" component={Checkout} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}